# -*- coding: utf-8 -*-
"""Polynomial Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18e6lcl2Ira8x-DRHmo7eLFPOJEhWUsU4

# **Polynomial Linear Regression**

## **Importing The Libraries**
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## **Importing The Dataset**"""

dataset = pd.read_csv('Position_Salaries.csv')
x = dataset.iloc[:,1:-1]
y = dataset.iloc[:,-1]

"""## **Training Linear Regression Model on Whole Dataset**

---


"""

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(x,y)

"""## **Training Polynomial Linear Regression on Whole Dataset**"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 4)
x_poly = poly_reg.fit_transform(x)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(x_poly, y)

"""## **Visualising Linear Regression Results**"""

plt.scatter(x, y, color = 'red')
plt.plot(x, lin_reg.predict(x),color = 'blue')
plt.title('Linear Regression')
plt.xlabel('Position')
plt.ylabel('Salary')
plt.show()

"""## **Visualising Polynomial Regression Results**"""

plt.scatter(x, y, color = 'red')
plt.plot(x, lin_reg_2.predict(poly_reg.fit_transform(x)),color = 'blue')
plt.title('Polynomial Regression')
plt.xlabel('Position')
plt.ylabel('Salary')
plt.show()

"""## **Visualising Polynomial Regression Results in Higher Resolution and for Smooth Curve**"""

x_grid = np.arange(0,10,0.1)
x_grid = x_grid.reshape((len(x_grid),1))
plt.scatter(x, y, color = 'red')
plt.plot(x_grid, lin_reg_2.predict(poly_reg.fit_transform(x_grid)),color = 'blue')
plt.title('Smooth Polynomial Regression')
plt.xlabel('Position')
plt.ylabel('Salary')
plt.show()

"""## **Predicting a new result with Linear Regression**"""

lin_reg.predict([[6.5]])

"""## **Predicting a New Result with Polynomial Regression**"""

lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))